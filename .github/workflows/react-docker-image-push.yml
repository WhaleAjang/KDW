name: Deploy
on:
    push:
        branches: [main, develop] # main 브랜치에 push 발생하면 트리거
    workflow_dispatch: # 디버깅용, actions 탭에서 직접 버튼 눌러서 트리거

jobs:
    deploy:
        runs-on: ubuntu-latest # ubuntu 최신 버전 환경에서 실행

        steps:
            - name: Checkout source code. # Repo checkout
              uses: actions/checkout@v3

            - name: Check Node v # Node v 확인
              run: node -v

            - name: Install dependencies # 의존 파일 설치
              run: npm install

            - name: Generate build # React Build
              run: npm run build

            # Docker에 연결하여 이미지를 빌드하고 Hub에 푸시한다.
            # https://docs.docker.com/build/ci/github-actions/#step-three-define-the-workflow-steps
            - name: Login to Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Build and push
              uses: docker/build-push-action@v4
              with:
                  context: .
                  file: ./Dockerfile
                  push: true
                  tags: ${{ secrets.DOCKERHUB_USERNAME }}/ajangfront

            # 마지막으로 ssh로 인스턴스에 연결하여 이미지를 Pull하고 컨테이너를 재시작한다.
            - name: Pull and restart Docker Container
              uses: appleboy/ssh-action@master
              with:
                  key: ${{ secrets.SSH_KEY }}
                  host: ${{ secrets.HOST }}
                  username: ${{ secrets.USER }}
                  script: |
                      docker-compose up -d
